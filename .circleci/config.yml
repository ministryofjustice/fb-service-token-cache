version: 2.1
orbs:
  slack: circleci/slack@3.4.2
  aws-cli: circleci/aws-cli@4.0.0

jobs:
  login-to-aws:
    docker: &docker_image
      - image: 'cimg/ruby:3.2.3-node'
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: $ECR_ROLE_TO_ASSUME # this will use the env var
          region: $ECR_REGION # this will use the env var
      - run: &ecr_login
          name: Login to ecr
          command: |
            aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin ${AWS_ECR_REGISTRY_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com
            aws configure export-credentials --format env
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env
  test:
    working_directory: ~/circle
    docker:
      - image: 'cimg/ruby:3.2.3'
        environment:
          RAILS_ENV: test
    steps:
      - checkout
      - setup_remote_docker: &remote_docker
          docker_layer_caching: true
      - run:
          name: test
          command: 'make spec'
      - slack/status: &slack_status
          fail_only: true
          only_for_branches: main
          failure_message: ":facepalm:  Failed job $CIRCLE_JOB  :homer-disappear:"
          include_job_number_field: false
  build_and_push_image:
    working_directory: ~/circle/git/fb-service-token-cache
    docker: &ecr_base_image
      - image: docker.io/ministryofjustice/fb-builder:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: &workspace_envs
          command: |
            cat bash.env >> $BASH_ENV
      - run: &base_environment_variables
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
            echo "export SSH_FILE_FOR_SECRETS=~/.ssh/id_rsa_ae20dfbeaf13151cc489e7f83fd5c17d" >> $BASH_ENV
      - run: &deploy_scripts
          name: cloning deploy scripts
          command: 'git clone git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - setup_remote_docker: *remote_docker
      - run:
          name: build and push docker images
          environment:
            ENVIRONMENT_NAME: test
          command: './deploy-scripts/bin/build'
  deploy_to_test_dev_eks:
    working_directory: ~/circle/git/fb-service-token-cache
    docker: *ecr_base_image
    steps:
      - checkout
      - add_ssh_keys: &ssh_keys
          fingerprints:
            - "ae:20:df:be:af:13:15:1c:c4:89:e7:f8:3f:d5:c1:7d"
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: deploy to test dev (EKS cluster)
          environment:
            APPLICATION_NAME: fb-service-token-cache
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-platform-test-dev
          command: './deploy-scripts/bin/deploy-eks'
      - slack/status: *slack_status
  deploy_to_test_production_eks:
    working_directory: ~/circle/git/fb-service-token-cache
    docker: *ecr_base_image
    steps:
      - checkout
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: deploy to test production (EKS cluster)
          environment:
            APPLICATION_NAME: fb-service-token-cache
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-platform-test-production
          command: './deploy-scripts/bin/deploy-eks'
      - slack/status: *slack_status
  deploy_to_live_dev_eks:
    working_directory: ~/circle/git/fb-service-token-cache
    docker: *ecr_base_image
    steps:
      - checkout
      - add_ssh_keys: *ssh_keys
      - setup_remote_docker: *remote_docker
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: deploy to live dev (EKS)
          environment:
            APPLICATION_NAME: fb-service-token-cache
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-platform-live-dev
          command: './deploy-scripts/bin/deploy-eks'
      - slack/status:
          only_for_branches: main
          success_message: ":rocket:  Successfully deployed to Live Dev  :guitar:"
          failure_message: ":alert:  Failed to deploy to Live Dev  :try_not_to_cry:"
          include_job_number_field: false
  deploy_to_live_production_eks:
    working_directory: ~/circle/git/fb-service-token-cache
    docker: *ecr_base_image
    steps:
      - checkout
      - add_ssh_keys: *ssh_keys
      - setup_remote_docker: *remote_docker
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: deploy to live production (EKS)
          environment:
            APPLICATION_NAME: fb-service-token-cache
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-platform-live-production
          command: './deploy-scripts/bin/deploy-eks'
      - slack/status:
          only_for_branches: main
          success_message: ":rocket:  Successfully deployed to Live Production  :guitar:"
          failure_message: ":alert:  Failed to deploy to Live Production  :try_not_to_cry:"
          include_job_number_field: false
  acceptance_tests:
    docker: *ecr_base_image
    resource_class: large
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *deploy_scripts
      - run:
          name: Run acceptance tests
          command: './deploy-scripts/bin/acceptance_tests'
      - slack/status: *slack_status
  smoke_tests:
    docker: *ecr_base_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *deploy_scripts
      - run:
          name: Run smoke tests
          command: './deploy-scripts/bin/smoke_tests'
      - slack/status: *slack_status

workflows:
  version: 2
  test_and_build:
    jobs:
      - login-to-aws:
          context: &moj-forms-context
            - moj-forms
            - moj-forms-platform-apps
      - test:
          requires:
            - login-to-aws
      - build_and_push_image:
          context: *moj-forms-context
          requires:
            - test
          filters:
            branches:
              only:
                - main
      - deploy_to_test_dev_eks:
          context: *moj-forms-context
          requires:
            - build_and_push_image
      - deploy_to_test_production_eks:
          context: *moj-forms-context
          requires:
            - build_and_push_image
      - acceptance_tests:
          context: *moj-forms-context
          requires:
            - deploy_to_test_dev_eks
            - deploy_to_test_production_eks
      - deploy_to_live_dev_eks:
          context: *moj-forms-context
          requires:
            - acceptance_tests
          filters:
            branches:
              only:
                - main
      - deploy_to_live_production_eks:
          context: *moj-forms-context
          requires:
            - acceptance_tests
          filters:
            branches:
              only:
                - main
      - smoke_tests:
          context: *moj-forms-context
          requires:
            - deploy_to_live_dev_eks
            - deploy_to_live_production_eks
